{"version":3,"sources":["components/Auth/Form/Input/Input.module.css","utils/validators/validators.js","redux/selectors.js","components/Auth/Form/Input/Input.jsx","components/Auth/Form/Form.jsx","redux/user-reducer.js","api/api.js","components/Auth/Auth.jsx","components/Me/Me.jsx","components/Me/MeContainer.jsx","App.jsx","serviceWorker.js","redux/redux-store.js","index.jsx","components/Auth/Auth.module.css","components/Auth/Form/Form.module.css","components/Me/Me.module.css"],"names":["module","exports","maxLength","min","getFormValues","state","form","values","getAccessToken","auth","access_token","required","value","undefined","email","test","aol","Input","input","name","meta","touched","error","warning","className","classes","wrapper","placeholder","maxLength20","length","minLength8","ReduxForm","reduxForm","props","onSubmit","handleSubmit","Field","component","warn","validate","initialState","refresh_token","authReducer","action","type","stateCopy","password","isLogin","dispatch","a","authData","returnSecureToken","url","axios","post","response","data","authSuccess","body","Auth","useDispatch","useSelector","console","log","button_block","button","onClick","reset","Me","text_message","message","refreshToken","connect","infoAceess","headers","useState","setMessage","useEffect","get","then","catch","infoRefresh","App","accessToken","basename","process","exact","path","to","Boolean","window","location","hostname","match","reducer","combineReducers","reduxFormReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06c5da95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__1lk8b\"};","export const required = value => value ? undefined : 'field is required';\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;\r\n\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\n\r\nexport const aol = value =>\r\n    value && /.+@aol\\.com/.test(value)\r\n        ? 'Really? You still use AOL for your email?'\r\n        : undefined;","export const getFormValues = state => state.form.form?.values;\r\nexport const getAccessToken = state => state.auth.access_token;","import React from \"react\";\r\nimport classes from './Input.module.css';\r\n\r\nexport const Input = ({input, name, meta: {touched, error, warning}}) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div>\r\n                <input {...input} placeholder={name} />\r\n            </div>\r\n            {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n                (warning && <span>{warning}</span>))}\r\n        </div>\r\n    )\r\n}","import {aol, email, maxLengthCreator, minLength, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"./Input/Input\";\r\nimport React from \"react\";\r\nimport classes from './Form.module.css';\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst minLength8 = minLength(8);\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.wrapper}>\r\n                <Field placeholder=\"Email\" name=\"email\" component={Input}\r\n                       warn={aol}\r\n                       validate={[required, email]}/>\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n                <Field placeholder=\"password\" name=\"password\" component={Input}\r\n                       validate={[required, minLength8, maxLength20]}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ReduxForm = reduxForm({form: 'form'})(Form);","export const UPDATE_TOKENS = 'UPDATE-TOKENS';\r\n\r\nconst initialState = {\r\n    access_token: null,\r\n    refresh_token: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_TOKENS: {\r\n            let stateCopy = {...state};\r\n            stateCopy.access_token = action.access_token;\r\n            stateCopy.refresh_token = action.refresh_token;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import axios from \"axios\";\r\nimport {UPDATE_TOKENS} from \"../redux/user-reducer\";\r\n\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email, password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'http://142.93.134.108:1111/sign_up';\r\n        if (isLogin) {\r\n            url = `http://142.93.134.108:1111/login?email=${email}&password=${password}`;\r\n        }\r\n\r\n        const response = await axios.post(url, authData);\r\n        const data = response.data;\r\n        dispatch(authSuccess(data.body.access_token, data.body.refresh_token));\r\n    }\r\n}\r\n\r\nexport function authSuccess(access_token, refresh_token) {\r\n    return {\r\n        type: UPDATE_TOKENS,\r\n        access_token,\r\n        refresh_token\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {reset} from 'redux-form';\r\nimport {getFormValues} from '../../redux/selectors';\r\nimport {ReduxForm} from \"./Form/Form\";\r\nimport {auth} from \"../../api/api\";\r\nimport classes from './Auth.module.css';\r\n\r\nconst Auth = () => {\r\n    const dispatch = useDispatch();\r\n    const values = useSelector(getFormValues);\r\n    const handleSubmit = values => {\r\n        console.log(values);\r\n    }\r\n\r\n    const handleSignUn = () => {\r\n        dispatch(reset('form'));\r\n        dispatch(auth(values.email,\r\n            values.password,\r\n            false\r\n        ));\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        dispatch(auth(values.email,\r\n            values.password,\r\n            true\r\n        ));\r\n    }\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <ReduxForm handleSubmit={handleSubmit}/>\r\n            <div className={classes.button_block}>\r\n                <div className={classes.button}>\r\n                    <button onClick={handleSignUn}>sign up</button>\r\n                </div>\r\n                <div className={classes.button}>\r\n                    <button onClick={handleLogin}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport classes from './Me.module.css';\r\n\r\nconst Me = (props) => {\r\n\r\n    const handleClick = () => {\r\n        props.refreshToken();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.text_message}>{props.message}</div>\r\n            <button onClick={handleClick}>Refresh</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Me;","import React, {useEffect, useState} from 'react';\r\nimport Me from \"./Me\";\r\nimport axios from \"axios\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport {authSuccess} from \"../../api/api\";\r\n\r\nconst MeContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function refreshToken() {\r\n        const infoRefresh = {\r\n            headers: {\r\n                'Authorization': `Bearer ${props.refresh_token}`\r\n            }\r\n        }\r\n        axios.post('http://142.93.134.108:1111/refresh', null, infoRefresh).then(function (response) {\r\n            console.log(response);\r\n            const data = response.data;\r\n            dispatch(authSuccess(data.body.access_token, data.body.refresh_token));\r\n        })\r\n    }\r\n\r\n    const infoAceess = {\r\n        headers: {\r\n            'Authorization': `Bearer ${props.access_token}`\r\n        }\r\n    }\r\n\r\n    const [message, setMessage] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.get('http://142.93.134.108:1111/me', infoAceess\r\n        ).then(function (response) {\r\n            setMessage(response.data.body.message);\r\n        }).catch(function (error) {\r\n                console.log(error);\r\n            }\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Me refreshToken={refreshToken} message={message}/>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    access_token: state.auth.access_token,\r\n    refresh_token: state.auth.refresh_token\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(MeContainer);","import React from \"react\";\r\nimport './App.css';\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport classes from '../src/App.css';\r\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport MeContainer from \"./components/Me/MeContainer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getAccessToken} from \"./redux/selectors\";\r\n\r\n\r\nfunction App(props) {\r\n    const accessToken = useSelector(getAccessToken);\r\n\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <div className={classes.App}>\r\n                <Switch>\r\n                    <Route exact path=\"/me\">\r\n                        {!accessToken ? <Redirect to=\"/\"/> : <MeContainer/>}\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        {accessToken ? <Redirect to=\"/me\"/> : <Auth/>}\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {reducer as reduxFormReducer} from 'redux-form';\r\nimport authReducer from \"./user-reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducer = combineReducers({\r\n    form: reduxFormReducer,\r\n    auth: authReducer\r\n});\r\nconst store = createStore(reducer, (applyMiddleware(thunk)));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Auth_wrapper__zD_NT\",\"button_block\":\"Auth_button_block__3Z597\",\"button\":\"Auth_button__1BtHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__rpQC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Me_wrapper__29mX7\",\"text_message\":\"Me_text_message__3WuzN\"};"],"sourceRoot":""}